name: .NET Core CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1
      - name: Restore Tool
        run: dotnet tool restore
      - name: Add Problem Matcher for dotnet-format
        uses: xt0rted/dotnet-format-problem-matcher@v1
      - name: Lint
        run: dotnet format --check

  test:
    strategy:
      fail-fast: false
      matrix:
        sdk-name:
          [".NET Core 3.1 (LTS)", ".NET 5 (Current)", ".NET 6 (Preview)"]
        include:
          - sdk-name: ".NET Core 3.1 (LTS)"
            sdk-version: "3.1"
          - sdk-name: ".NET 5 (Current)"
            sdk-version: "5.0"
          - sdk-name: ".NET 6 (Preview)"
            sdk-version: "6.0.100-preview.2.21155.3"
    name: Debug Build & Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1
      - name: Setup ${{ matrix.sdk-name }} SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.sdk-version }}

      - name: Restore
        run: dotnet restore --locked-mode
      - name: Debug Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build

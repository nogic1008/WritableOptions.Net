name: .NET CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.9.0
      - name: Add Problem Matcher for dotnet-format
        uses: xt0rted/dotnet-format-problem-matcher@v1
      - name: Lint
        run: dotnet format --verify-no-changes

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        framework: [netcoreapp3.1, net6.0]
    name: Debug Build & Test
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.7
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 3.1.x
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.9.0

      - name: Restore
        run: dotnet restore --locked-mode
      - name: Debug Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test -f ${{ matrix.framework }} --no-build --settings coverlet.runsettings

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          flags: ${{ runner.os }},${{ matrix.framework }}

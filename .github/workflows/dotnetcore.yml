name: .NET Core CI/CD

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1
      - name: Restore Tool
        run: dotnet tool restore
      - name: Add Problem Matcher for dotnet-format
        uses: xt0rted/dotnet-format-problem-matcher@v1
      - name: Lint
        run: dotnet format --check

  test:
    name: Debug Build & Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # see also https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json
        dotnet:
          [
            { sdk: "2.1", framework: "netcoreapp2.1" },
            { sdk: "3.1", framework: "netcoreapp3.1" },
            { sdk: "5.0", framework: "net5.0" },
            { sdk: "6.0.100-preview.1.21103.13", framework: "net6.0" },
          ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ matrix.dotnet.sdk }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ matrix.dotnet.sdk }}-
            ${{ runner.os }}-nuget-
      - name: Setup .NET Core ${{ matrix.dotnet.sdk }} SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet.sdk }}

      - name: Build
        run: dotnet build ./test/Nogic.WritableOptions.Tests/Nogic.WritableOptions.Tests.csproj -f ${{ matrix.dotnet.framework }}
      - name: Test
        run: dotnet test ./test/Nogic.WritableOptions.Tests/Nogic.WritableOptions.Tests.csproj --no-build -f ${{ matrix.dotnet.framework }} --settings coverlet.runsettings

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: "!**/.nuget/packages/**/*.*"
          flags: ${{ runner.os }},${{ matrix.dotnet.framework }}
